### Expected distance between two random points in a unit (hyper)box
## Oliver Snellman 2020

# Approximates what the title says.

length_between_random_points <- function(dim, n, show=TRUE){
    distances <- c(NA)
    
    for(i in 1:n){
        vector1 <- runif(dim, min=0, max=1)
        vector2 <- runif(dim, min=0, max=1)
        
        dist <- c(NA)
        dist[[1]] <- vector1[[1]] - vector2[[1]]
        
        # Apply Pythagoras' rule to two consecutive dimensions in a row
        for(k in 2:dim){
            dist[[k]] <- sqrt((vector1[[k]] - vector2[[k]])^2 + dist[[k-1]]^2)
        }
        
        distances[[i]] <- dist[[dim]]
    }
    
    average_distance <- mean(distances)
    deviations <- sd(distances)
    
    if(show){
      hist(distances, xlab="", col="skyblue")
      cat("\n Average distance ", round(average_distance, 2),
          "\n Standard deviation ", round(deviations, 2), "\n")
    } else {
      return(average_distance)
    }    
}

length_between_random_points(dim=3, n=10000)


# Find how the average develops when dimensions increase
results <- c(NA)

for(j in 2:100) {
  results[[j]] <- length_between_random_points(dim=j, n=1000, show=FALSE)
}

ts.plot(results)

length_between_random_points(dim=2, n=10000)

# Find how the average develops when dimensions increase
results <- c(NA)

for(j in 2:100) {
  results[[j]] <- length_between_random_points(dim=j, n=1000, show=FALSE)
}

ts.plot(results)
